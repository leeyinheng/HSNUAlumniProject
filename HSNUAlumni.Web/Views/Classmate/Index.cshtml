<!DOCTYPE html>
<style>
    .passaway {
        background-color: pink;
    }

    .lost{
        background-color: lightgreen;
    }

</style> 
<html>

@Html.Partial("~/Views/Shared/_Contacts.cshtml", model: "HSNU")

<div id="directionsPanel"></div>

</html>


<script>

    var directionsDisplay = new google.maps.DirectionsRenderer();

    var directionsService = new google.maps.DirectionsService();

    var app = angular.module('mainapp', ['angularModalService'])

    app.value("selectedclassId", "100");

    app.value("data", {
        ClassId: '100',
        SeatNumber:'', 
        Name: 'Test',
        EnglishName: '',
        Gender: '',
        Status: '',
        Birthday: '',
        Notes: '',
        CellPhone: '',
        HomePhone: '',
        OfficePhone: '',
        Email: '',
        FaceBookAccount: '',
        LineAccount: '',
        Company: '',
        Position: '',
        HomeAddress: '',
        OfficeAddrss: '',
        PhotoId: '',
        ModifiedUser: '',
        ModifiedDate: '',
        Lat: '',
        Lng:''
    });

    app.value("updatelist", []); 

    app.controller('serviceCtrl', function ($rootScope, $scope, $http, $filter, ModalService, data) {

        $scope.showbutton = false;

        $scope.$watch('classDropdown', function () {

            selectedclassId = $scope.classDropdown;

            $scope.showbutton = false;

        $http.get("/api/classmates/" + $scope.classDropdown)
        .error(function (error) {

            $scope.showbutton = false; 

            alert(error);
        })
        .success(function (response) {
               
            var orderBy = $filter('orderBy');

            $scope.list = response;
            $scope.myVar = false;
            $scope.itemSelected = null;
            $scope.setSelected = function (itemSelected) {
                $scope.itemSelected = itemSelected;
                data.Name = itemSelected.Name;
                data.Birthday = itemSelected.Birthday;
                data.CellPhone = itemSelected.CellPhone;
                data.ClassId = itemSelected.ClassId;
                data.Company = itemSelected.Company;
                data.Email = itemSelected.Email;
                data.EnglishName = itemSelected.EnglishName;
                data.FaceBookAccount = itemSelected.FaceBookAccount;
                data.Gender = itemSelected.Gender;
                data.HomeAddress = itemSelected.HomeAddress;
                data.HomePhone = itemSelected.HomePhone;
                data.LineAccount = itemSelected.LineAccount;
                data.ModifiedDate = itemSelected.ModifiedDate;
                data.ModifiedUser = itemSelected.ModifiedUser;
                data.Notes = itemSelected.Notes;
                data.OfficeAddrss = itemSelected.OfficeAddrss;
                data.OfficePhone = itemSelected.OfficePhone;
                data.PhotoId = itemSelected.PhotoId;
                data.Position = itemSelected.Position;
                data.SeatNumber = itemSelected.SeatNumber;
                data.Status = itemSelected.Status;
                data.Lat = itemSelected.Lat; 
                data.Lng = itemSelected.Lng; 
                
                ModalService.showModal({
                    templateUrl: 'modal.html',
                    controller: 'ModalController'
                }).then(function (modal) {
                    modal.element.modal();
                    modal.close.then(function (result) {
                       // $scope.message = "You said " + result;
                        alert('modal.close'); 
                    });
                });
            };

            $scope.addNew = function () {

                if (selectedclassId == null || selectedclassId == '') {
                    alert("請先選擇班號");

                    return;
                }
                
                data.Name = '';
                data.Birthday = '';
                data.CellPhone = '';
                data.ClassId = selectedclassId;
                data.Company = '';
                data.Email = '';
                data.EnglishName = '';
                data.FaceBookAccount = '';
                data.Gender = 'M';
                data.HomeAddress = '';
                data.HomePhone = '';
                data.LineAccount = '';
                data.ModifiedDate = '';
                data.ModifiedUser = '';
                data.Notes = '';
                data.OfficeAddrss = '';
                data.OfficePhone = '';
                data.PhotoId = 'profile.png';
                data.Position = '';
                data.SeatNumber = '';
                data.Status = '保持聯絡';

                ModalService.showModal({
                    templateUrl: 'modal.html',
                    controller: 'ModalController'
                }).then(function (modal) {
                    modal.element.modal();
                    modal.close.then(function (result) {
                        // $scope.message = "You said " + result;
                        alert('modal.close');
                    });
                });
            };


            $scope.order = function (predicate, reverse) {
                $scope.list = orderBy($scope.list, predicate, reverse);
            };

            $scope.list = orderBy($scope.list, 'SeatNumber', false);

            $scope.popUpItem = function (itemSelected) {
                data.Name = itemSelected.Name;
                data.Birthday = itemSelected.Birthday;
                data.CellPhone = itemSelected.CellPhone;
                data.ClassId = itemSelected.ClassId;
                data.Company = itemSelected.Company;
                data.Email = itemSelected.Email;
                data.EnglishName = itemSelected.EnglishName;
                data.FaceBookAccount = itemSelected.FaceBookAccount;
                data.Gender = itemSelected.Gender;
                data.HomeAddress = itemSelected.HomeAddress;
                data.HomePhone = itemSelected.HomePhone;
                data.LineAccount = itemSelected.LineAccount;
                data.ModifiedDate = itemSelected.ModifiedDate;
                data.ModifiedUser = itemSelected.ModifiedUser;
                data.Notes = itemSelected.Notes;
                data.OfficeAddrss = itemSelected.OfficeAddrss;
                data.OfficePhone = itemSelected.OfficePhone;
                data.PhotoId = itemSelected.PhotoId;
                data.Position = itemSelected.Position;
                data.SeatNumber = itemSelected.SeatNumber;
                data.Status = itemSelected.Status;


                ModalService.showModal({
                    templateUrl: 'popup.html',
                    controller: 'PopupController'
                }).then(function (modal) {
                    modal.element.modal();
                });
            };

            $scope.vcard = function (itemSelected) {

                $http.post("/api/classmate/vcard", itemSelected)
                .error(function (e) {
                    alert(e);
                })
                .then(function (results) {

                    var data = results.data;

                    var file = new Blob([data], { type: 'text/x-vcard' });
                                     
                    saveAs(file, 'contact.vcf');

                })
            };
            
            $scope.export = function () {

                if (selectedclassId == null || selectedclassId == '') {

                    alert("請先選擇班號");

                    return;
                }

                if ($scope.list.length == 0)
                {
                    alert("沒有資料");

                    return; 

                }


                $http.post("/api/classmate/export", $scope.list)
                .error(function (e) {
                    alert(e); 
                })
                .then(function (results) {

                    var data = results.data;

                    var file = new Blob([data], { type: "application/excel" });

                    saveAs(file, 'contacts.xls'); 
                })

            };

          
        }
        )
        });


        //mark all classmates on google map 
        $http.get("/api/classmates/map")
        .error(function (error) { alert(error) })
        .success(function (response) {
            $scope.mapusers = response;

            // Google Map 

            var mapOptions = {

                center: new google.maps.LatLng(25.046008, 121.542955),
                zoom: 2
            };

            $scope.map = new google.maps.Map(document.getElementById("mapDiv"), mapOptions);

            directionsDisplay.setMap($scope.map);

            directionsDisplay.setPanel(document.getElementById("directionsPanel"));

            $scope.markers = [];


            var createMarker = function (a, b, classid, title, desc, photo) {

                var position = { lat: a, lng: b };

                var marker = new google.maps.Marker({
                    map: $scope.map,
                    position: position,
                    title: classid + " | " + title 
                });
                marker.content =  "<a href='/Image/" + photo + "' target='_blank'><img src='/Image/" + photo +  "' alt='Photo' width='50' height='50' /></a>" + '<div class="infoWindowContent">' + desc + '</div>';

                var tohere = '<br>Directions: <b>To here<\/b> - <a href="javascript:fromhere()">From here<\/a>' +
                                 '<br>Start address:<form action="javascript:getDirections()">' +
                                 '<input type="text" SIZE=40 MAXLENGTH=40 name="saddr" id="saddr" value="" /><br>' +
                                 '<INPUT value="Get Directions" TYPE="button" onclick="getDirections()"><br>' +
                                 'Walk <input type="checkbox" name="walk" id="walk" /> &nbsp; Avoid Highways <input type="checkbox" name="highways" id="highways" />' +
                                 '<input type="hidden" id="daddr" value="' + a + ',' + b +
                                 '"/>';



                google.maps.event.addListener(marker, 'click', function () {
                    infoWindow.setContent('<h2>' + marker.title + '</h2>' + marker.content + '<P/>' + tohere);
                    infoWindow.open($scope.map, marker);
                });

                $scope.markers.push(marker);
            }

            var i = 0 
            angular.forEach($scope.mapusers, function (item) {
                if (item.Lng != null && item.Lng != '') {

                    if (item.PhotoId == null)
                    {
                        item.PhotoId = "profile.png"; 
                    }
                                        

                    createMarker(parseFloat(item.Lat), parseFloat(item.Lng), item.ClassId, item.Name, item.HomeAddress, item.PhotoId);     

                }

            });

            var infoWindow = new google.maps.InfoWindow();
                    

            $scope.openInfoWindow = function (e, selectedMarker) {
                e.preventDefault();
                google.maps.event.trigger(selectedMarker, 'click');
            }

        }); 

        var refreshListener = $rootScope.$on('refresh', function () {

            selectedclassId = $scope.classDropdown;

            $http.get("/api/classmates/" + $scope.classDropdown)
            .error(function (error) {
                alert(error);
            })
            .success(function (response) {
                  $scope.list = response;
            }
            )

        });

        $scope.$on('$destroy', refreshListener);

        $http.get("/api/classmates/recent")
        .success(function (response) {

            updatelist = response;
                      
            ModalService.showModal({
                templateUrl: 'recent.html',
                controller: 'RecentController'
            }).then(function (modal) {
                modal.element.modal();
                modal.close.then(function (result) {
                      alert('modal.close');
                });
            });

        }); 
        
    });

    app.controller('ModalController', function ($rootScope, $scope, $http, data) {
       
        $scope.data = data;
    
        $scope.add = function () {

            var f = document.getElementById('file').files[0];

            var fileId = data.ClassId + data.Name;

            var fd = new FormData();

            fd.append("uploadedFile", f);
 
            $('#file').val('');

            $http
             .post("../api/classmate/uploadphoto?fileId=" + fileId, fd, {
                 headers: {
                     'Content-Type': undefined
                 },
                 transformRequest: angular.identity
             })
             .error(function (error) {
                 alert(error);
             })
             .success(function (response) {
                 data.PhotoId = response;
                 
             });
        }

        $scope.close = function (result) {
            // close(result, 500); // close, but give 500ms for bootstrap to animate
            if (result != null && result != 'No') {

                $http.post("/api/classmate/AddorUpdate", result)
                .error(function (e) {
                    alert(e);
                })
                .success(function (response) {
                    alert("更新完成");
                    $rootScope.$broadcast('refresh');
                    //$scope.$emit('refresh', { message: 'test' });
                 });


            }
           
        };

        

    });


    app.controller('PopupController', function ($scope, data) {
        $scope.data = data;
    });

    app.controller('RecentController', function ($scope) {
        $scope.list = updatelist
    }); 
  
    function sleepFor(sleepDuration) {
        var now = new Date().getTime();
        while (new Date().getTime() < now + sleepDuration) { /* do nothing */ }
    }
</script>